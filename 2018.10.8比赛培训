 Edit new file  Preview 

问题描述

给定一个十进制正整数n(0 < n < 10^10000)，每个数位上数字均不为0。n的位数为m。
现在从m位中删除k位(0<k < m)，求生成的新整数最小为多少？
例如: n = 9128456, k = 2, 则生成的新整数最小为12456

输入

第一行t, 表示有t组数据；
接下来t行，每一行表示一组测试数据，每组测试数据包含两个数字n, k。

输出

输出t行，每行一个数字，表示从n中删除k位后得到的最小整数。

样例输入

2 

9128456 2 

1444 3 

样例输出

12456 

1





#include <iostream>

#include <string>

	using namespace std;



	int main() {

		string a;

		long  t, k, i, length1, length2;

		cin >> t;

		while (t!=0) {

			cin >> a;

			cin >> k;

			length1 = a.length();

			for (i = 0; i < length1 - 1; i++) {

				length2 = a.length();

				if (length2 == length1 - k)break;

				if (a[i] > a[i + 1]) {

					a.erase(i,1);

					i = -1;

				}

			}

			length2 = a.length();

			if (length2 != length1 - k) { a.erase(length1 - k); }

			cout << a << endl;

			t = t - 1;

			

		}

		

		return 0;

	}
