#include<bits/stdc++.h>
using namespace std;
typedef long long ll;
const ll MAXN = 2e5+5;
ll tr[4*MAXN],sum[4*MAXN],a[MAXN],laz[4*MAXN];
ll n,q;
/*
5 9
1 2 3 4 5
2 1 5
1 2 4 10
2 2 2
2 3 3
2 4 4
1 5 5 10
2 1 2
2 3 3
2 3 5
2 1 5

*/

void push_up(ll p){
	sum[p] = sum[p<<1]+sum[p<<1|1];
}

void push_down(ll p,ll l,ll r){
	if(laz[p]){
	ll mid = (l+r)/2;
	sum[p<<1] += (mid-l+1)*laz[p];
	sum[p<<1|1]+=(r-mid)*laz[p];
	laz[p<<1]+=laz[p];
	laz[p<<1|1]+=laz[p];
	laz[p] =0;
	}
}
void add(ll l,ll r,ll rl,ll rr,ll p,ll x){
	ll mid  = (rl+rr)/2;
	if(rl>=l&&rr<=r){
		laz[p]+=x;
		sum[p]+=(rr-rl+1)*x;
		return ;
	}
	push_down(p,rl,rr);
	if(l<=mid)add(l,r,rl,mid,2*p,x);
	if(r>mid)add(l,r,mid+1,rr,2*p+1,x);
	push_up(p);
}

ll query(ll l,ll r,ll rl,ll rr,ll p){
	if(rl>=l&&rr<=r){
		return sum[p];
	}
	push_down(p,rl,rr);
	ll mid = (rl+rr)/2;
	ll ans = 0;
	if(l<=mid)ans+=query(l,r,rl,mid,p<<1);
	if(r>mid)ans+=query(l,r,mid+1,rr,p<<1|1);
	return ans;
}
void build(ll l,ll r,ll p){
	if(l==r){
		sum[p] = a[l];
		return;
	}
	ll mid  = (l+r)/2;
	build(l,mid,p<<1);
	build(mid+1,r,p<<1|1);
	push_up(p);
}


int  main(){
	ios::sync_with_stdio(false);
	cin >> n >> q;
	for(ll i =1;i<=n;++i)cin >> a[i];
	build(1,n,1);
	ll ord,l,r,x;
	for(ll i =1;i<=q;++i){
		cin >> ord;
		if(ord==1){
			cin >> l >> r >> x;
			add(l,r,1,n,1,x);
		}
		else{
			cin >> l >> r;
			cout << query(l,r,1,n,1) << endl;
		}
	}
	return 0;
}
