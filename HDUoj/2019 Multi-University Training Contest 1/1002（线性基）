#include<bits/stdc++.h>
using namespace std;
typedef long long ll;
const int MAXN = 5e5+5;
ll a[MAXN],d[32],f[MAXN][32],p[MAXN][32];
int n,m,l,r;

void _insert(int r,ll x){            //插入元素 
	int k = r;
	for(int i = 0;i<=31;++i)f[r][i] = f[r-1][i],p[r][i] = p[r-1][i];
	for(int i =31;i>=0;--i){
		if(x&(ll(1)<<i)){               //特别注意结果超出int范围，左移要加long long 
		if(f[r][i]){
			if(k>p[r][i]){
				int tem = k;k = p[r][i];p[r][i] = tem;
				tem = x;x = f[r][i];f[r][i] = tem;
			}
			x^=f[r][i];	
		}
		else{
			f[r][i] = x;
			p[r][i] = k;
			break;
		}
		}
	}
}
ll _query(int l,int r){      //贪心求异或和最大 
	ll ans = 0;
	for(int i  = 31;i>=0;--i){
		if((ans^f[r][i])>ans&&p[r][i]>=l)ans= ans^f[r][i];      //注意：异或结果比较时需要加上括号在进行比较，不然会出错 
	}
	//cout << ans << endl;
	return  ans;
}

int main(){
	ios::sync_with_stdio(false);
	int t;
	cin >> t;
	int cha = 0;
	while(t--){
		cha = 0;
		cin >> n >> m;
		for(int i = 1;i<=n;++i)cin >> a[i],_insert(i,a[i]);
		int ord;
		for(int i = 0;i<m;++i){
			cin >> ord;
			if(ord)cin >> l,a[++n] = l^cha,_insert(n,l^cha);
			else {
				cin >> l >> r;
				l = (l^cha)%n+1;r = (r ^ cha)%n+1;
				if(l>r)swap(l,r);
				cha = _query(l,r);
				cout << cha << endl;
			}
		}
		for(int i = 1;i<=n;++i)
			for(int j = 31;j>=0;--j)f[i][j]=p[i][j]=0;
	}
	return 0;
}
